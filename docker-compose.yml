version: '3.9'

services:
  mongo_db:
    container_name: db_container
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: _
      MONGO_INITDB_ROOT_PASSWORD: _
      MONGO_INITDB_DATABASE: _
    ports:
      - 2717:27017
    volumes:
      - mongo_db:/data/db
    networks:
      - shared-network

  nginx:
    image: nginx:latest
    container_name: nginx-prod
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      server:
        condition: service_healthy
      client:
        condition: service_started
    networks:
      - shared-network
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  server:
    container_name: reparify_server_gql
    restart: unless-stopped
    image: reparify-server-gql-prod:0.1.0
    build:
      context: server
      target: production
      dockerfile: Dockerfile
    volumes:
      - ./server/src/public:/usr/reparify/server/dist/public
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://mongo_db:27017
      MONGODB_CONNECTION_URI: _
      DB_NAME: _
      DB_USER: _
      DB_PASS: _
      CLIENT_URI: https://reparify.com
      SECRET: _
      GOOGLE_CLIENT_ID: _
      GOOGLE_CLIENT_SECRET: _
      FACEBOOK_APP_ID: _
      FACEBOOK_APP_SECRET: _
    healthcheck:
      test: ["CMD", "curl", "http://server:4000"]
      interval: 5s
      timeout: 3s
      retries: 15
      start_period: 30s
    ports:
      - 4000:4000
    networks:
      - shared-network
    depends_on:
      - mongo_db

  client:
    container_name: reparify_client
    restart: unless-stopped
    image: reparify-client-prod:0.1.0
    build:
      context: client
      target: production
      dockerfile: Dockerfile
    environment:
      SERVER_URI: https://reparify.com
    ports:
      - 3000:3000
    networks:
      - shared-network
    depends_on:
      - server

volumes:
  mongo_db: {}
  images_dir: {}

networks:
  shared-network: